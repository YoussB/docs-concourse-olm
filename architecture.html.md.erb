---
title: Concourse Architecture
owner: Concourse
---

This topic describes the VMs and software components that make up a Concourse installation.

## <a id="diagram"></a> Component Diagram

Concourse runs its software components on three VM types: a _web_ VM, a _server_ VM, and one or more _worker_ VMs. This diagram shows where its components run and how they work together.

The [Component Descriptions](#description) below explain what each component does. [Internal vs External Workers](#comms) describes the communication paths that the web and worker VMs use depending on whether they run in the same network.

![Arch Doc](concourse-arch.png)

## <a id="description"></a> Component Descriptions

The following table describes the function of each Concourse component:

<table>
  <tr>
    <th>VM</th>
    <th>Component</th>
    <th>Function</th>
  </tr><tr>
    <td rowspan=2><b>Web</b></td>
    <td><b>ATC</b></td>
    <td>Runs an HTTP server that:
      <ul><li>Provides the Concourse web UI.</li>
      <li>Serves the Concourse API on port 8080, to support the Fly CLI and other components.</li>
      <li>Schedules pipelines to run on worker VMs.</li></ul></td>
  </tr><tr>
    <td><b>TSA</b></td>
    <td>Runs an SSH server that:
      <ul><li>Listens on port 2222.</li>
      <li>Securely <a href="http://concourse.ci/registering-via-tsa.html">registers worker VMs</a> for ongoing communication with the ATC, when worker and ATC run in the same network.</li></ul>
    If a Concourse installation uses workers running in separate networks from the ATC, the TSA acts as a reverse-proxy. In this case, the TSA advertises an ephemeral port as the worker VM address.</td>
  </tr><tr>
    <td><b>Database</b></td>
    <td><b>PostgreSQL</td>
    <td>Stores all pipeline data, such as build logs and resource versions, for use by worker VMs.</td>
  </tr><tr>
    <td rowspan=3><b>Worker</b></td>
    <td><b>Beacon</b></td>
    <td>Registers with the ATC that the worker VM can run Concourse build pipelines, and sends heartbeats in one of two ways:
      <ul><li>If the worker runs in the same network as the web VM, communicates internally with the ATC through the TSA.</li><li>
      If the worker runs in a different network from the web VM, sends messages via TCP.</li></ul></td>
  </tr><tr>
    <td><b>Garden</b></td>
    <td>
      <ul><li>Listens on port 7777.</li>
      <li>Provides an API for the ATC to manage <b>containers</b> to do things like:
        <ul><li>Discover new versions of <a href="http://concourse.ci/resource-types.html">resources</a>.</li>
        <li>Run the tasks in a pipeline <a href="http://concourse.ci/build-plans.html">build plan.</a></li></ul></li></ul></td>
  </tr><tr>
    <td><b>Baggageclaim</b></td>
    <td>
      <ul><li>Listens on port 7788.</li>
      <li>Provides an API for the ATC to manage disk resources, or <b>volumes</b>, mounted to containers.</li>
      <li>Uses volumes to store persistent caches of resource versions and to propagate artifacts such as caches and task outputs through the containers used for a build.</li></ul></td>
  </tr>
</table>

For more information, see the [Concourse Documentation](http://concourse.ci/architecture.html). 

## <a id="comms"></a> Internal vs. External Workers

TK



